<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_boss</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Boss Config
//Developer : Zhao Yi

//Animation
image_speed = 0;
image_index = 1;

//Attack
canAttack = true;
counter = 0; //Count stage of attack cycle, lanterns disabled every 4 turns

//Health
healthbar = 5;

//Monster spawn locations
blackholeSpawn[0] = 128;
blackholeSpawn[1] = 64;

monsterSpawn[0] = 896;
monsterSpawn[1] = 256;

//Duration 
blackholeExist = false; //Disable two blackhole spawning
driftSelfDestroy = 400; //Duration before drift monster automatically destroys
riseSelfDestroy = 500;
blackholeSelfDestroy = 1000;
attackCooldown = 125; //Attack cooldown

//Retrieve all lanterns in boss fight
lantern[0] = collision_circle(544, 192, 30, obj_lantern, false, false);
lantern[1] = collision_circle(640, 320, 30, obj_lantern, false, false);
lantern[2] = collision_circle(544, 448, 30, obj_lantern, false, false);
lantern[3] = collision_circle(384, 448, 30, obj_lantern, false, false);
lantern[4] = collision_circle(288, 320, 30, obj_lantern, false, false);
lantern[5] = collision_circle(384, 192, 30, obj_lantern, false, false);

//Spikes
currentlySpike = false;
spikesToMake = 23;
spikesLeftToMake = 0;
startSpike[0] = 896; //Start of path
startSpike[1] = 624;

//Create Path
path = path_add();
path_set_closed(path,false);
path_add_point(path,startSpike[0],startSpike[1],0);
dirxOfSpike = sign(obj_player_move.x - startSpike[0]); //Get direction
xEndOfSpike = (startSpike[0] + dirxOfSpike*690) // Determines the end of coordinate of spike
path_add_point(path,xEndOfSpike,startSpike[1],0);  // Adds end point to path

//Sets all the paths point for spikes
for(var i = spikesToMake; i &gt;= 0; i -= 1){
    pathArray[i,0] = path_get_x(path,0.96-((spikesToMake-i)*(0.9/spikesToMake)));
    pathArray[i,1] = path_get_y(path,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Boss disable
//Developer : Zhao Yi

if (optionDisable == "Disable1")
{
    lantern[0].disable = true;
    lantern[2].disable = true;
    lantern[4].disable = true;
    
    instance_destroy(obj_disableParticle);
}
else if (optionDisable == "Disable2")
{
    lantern[1].disable = true;
    lantern[3].disable = true;
    lantern[5].disable = true;
    instance_destroy(obj_disableParticle);
}

alarm[0] = 200; //Re-enable Lanterns
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Boss action
//Developer : Zhao Yi

//Depending on which monster, handle appropriately
if (option == "Blackhole")
{
    blackholeExist = true; //Prevent more than 1 blackhole enemy from spawning
    monster = instance_create(blackholeSpawn[0],blackholeSpawn[1],obj_blackhole_enemy); //Create monster
    monster.alarm[0] = blackholeSelfDestroy; //Set destroy timer
}
else if (option == "Drifting")
{
    monster = instance_create(monsterSpawn[0],monsterSpawn[1],obj_drift_enemy); //Create monster
    monster.alarm[0] = driftSelfDestroy; //Set destroy timer
}
else if(option == "Spikes")
{
    spikesLeftToMake = spikesToMake; //Resets left to make 
    audio_play_sound(sound8_SpikeMonster,0,false); //Play spike sound
}
else
{
    monster = instance_create(monsterSpawn[0],monsterSpawn[1],obj_rise_enemy); //Create monster
    monster.alarm[2] = riseSelfDestroy; //Set destroy timer
}

//Animation: Reset to default
image_speed = 0;
image_index = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create spikes
//Developer : Zhao Yi

pathx = pathArray[spikesToMake-spikesLeftToMake,0]; //Gets the x coordinate to create the spike
pathy = pathArray[spikesToMake-spikesLeftToMake,1]; //Gets the y coordinate to create the spike
var spike = instance_create(pathx,pathy,obj_spikes); //Creates the spike at determined coordinate
spikesLeftToMake -= 1;
currentlySpike = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack cooldown over
//Developer : Zhao Yi

canAttack = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Re-enable Lanterns
//Developer : Zhao Yi

lantern[0].disable = false;
lantern[1].disable = false;
lantern[2].disable = false;
lantern[3].disable = false;
lantern[4].disable = false;
lantern[5].disable = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Boss Controller
//Developer : Zhao Yi

//Check if boss is dead
if (healthbar == 0) {
    scr_stopSound();
    audio_stop_sound(sound2_BossMusic);
    room_goto(rm_endScreen);
}

//Resets the turn counter
if (counter == 4)
{
   counter = 0; //To ensure that the counter does not get infinitely big.
}

//Animation loop
if(image_index == 7)
{
    image_index = 6;
}
else if(image_index == 5)
{
    image_index = 0;
}

//Checks if spikes there is still more spikes to make and it is not spiking
if (spikesLeftToMake != 0 &amp;&amp; currentlySpike == false)
{
    currentlySpike= true;
    alarm[2] = 5; //Create a spike
}

//Attack
if (canAttack)
{
    //If every 4th attack, disable lanterns
    if (counter == 0) 
    {
        optionDisable = choose("Disable1","Disable2","DisableNone"); //Choose randomly what set to disable
        if (optionDisable == "Disable1")
        {
            instance_create(lantern[0].x,lantern[0].y,obj_disableParticle);
            instance_create(lantern[2].x,lantern[2].y,obj_disableParticle);
            instance_create(lantern[4].x,lantern[4].y,obj_disableParticle);
            alarm[4] = 50;
        }
        else if (optionDisable == "Disable2")
        {
            instance_create(lantern[1].x,lantern[1].y,obj_disableParticle);
            instance_create(lantern[3].x,lantern[3].y,obj_disableParticle);
            instance_create(lantern[5].x,lantern[5].y,obj_disableParticle);
            alarm[4] = 50;
        }
        
        counter += 1;
    }
    else if (counter &lt;= 3)
    {
        //If there is already a blackhole, it will not be a random option
        if (blackholeExist) 
        {
            option = choose("Spikes","Drifting","Rising","Drifting","Rising")
        }
        else 
        {
            option = choose("Spikes","Blackhole","Drifting","Rising","Drifting","Rising")
        }
        
        //If option is spikes
        if (option == "Spikes")
        {
            //Animation: Stomp
            image_index = 0
            image_speed = 0.1
            
            alarm[3] = 100; //Code for boss actions
        }
        else
        {
            //Animation: Summon
            image_index = 6
            image_speed = 0.1
            
            alarm[3] = 100; //Code for boss actions
            
        }
        
        canAttack = false;
        counter += 1;
        alarm[1] = attackCooldown; //Set attack to be on cooldown
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
