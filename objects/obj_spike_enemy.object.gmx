<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spike_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Declare of all variable

image_speed = 0; //Animation

state = e_state.idle; //State of the enemy

//Speed of enemy
vsp = 0;
hsp = 0;

//Spike Creation
canSpike = true; 
currentlySpike = false; //If enemy is spiking
spikesToMake = 10; // How many spikes to make
spikesLeftToMake = 0; // How many spikes that should still be made

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creates spike
//Developer : Shared

pathx = pathArray[spikesToMake-spikesLeftToMake,0]; //Gets the x coordinate to create the spike
pathy = pathArray[spikesToMake-spikesLeftToMake,1]; //Gets the y coordinate to create the spike
var spike = instance_create(pathx,pathy,obj_spikes); //Creates the spike at determined coordinate
spikesLeftToMake -= 1;
currentlySpike = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Re-enables can spike after attack cooldown
canSpike=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Attack
// Developer : Shared

// Checks to see state of enemy (chasing or idle)
switch (state)
{
    case e_state.idle:
    {
        gravity = 0.75
        if(distance_to_object(obj_player_move) &lt; 480) state = e_state.chase;
    }
    break;
    case e_state.chase:
    {
        //Checks if spikes there is still more spikes to make and it is not spiking
        if (spikesLeftToMake != 0 &amp;&amp; currentlySpike == false)
        {
            //Creates a spike
            currentlySpike= true;
            alarm[1] = 5;
        }
        // Checks if spikes to make is none
        else if(spikesLeftToMake = 0)
        {
            //Animation
            image_speed = 0;
            image_index = 2;
        }
        
        //If Enemy can spike
        if(canSpike)
        {
            //Create Path from enemy to player
            path = path_add();
            path_set_closed(path,false);
            path_add_point(path,x,y,0);
            dirxOfSpike = sign(obj_player_move.x - x); //Determine if player is on left or right
            xEndOfSpike = (x + dirxOfSpike*500) // Determines the end of coordinate of spike
            path_add_point(path,xEndOfSpike,y,0); // Adds end point to path
            
            //Sets all the paths point for spikes
            for(var i = spikesToMake; i &gt;= 0; i -= 1){
                pathArray[i,0] = path_get_x(path,0.96-((spikesToMake-i)*(0.9/spikesToMake)));
                pathArray[i,1] = path_get_y(path,0.96);
            }
            
            spikesLeftToMake = spikesToMake; //Resets left to make
            canSpike = false;
            audio_play_sound(sound8_SpikeMonster,0,false);
            
            //Animation
            dir = sign(obj_player_move.x - x); //Determine if player is on left or right
            //Negative dir = left side spike animation | Postive dir = right 
            if(dir &lt; 0)
            {
                image_xscale = -1
            }else{ image_xscale = 1; }
            image_speed = 0.15
            if(image_index == 2)
            {
                image_index = 0;
            }
            
            alarm[0] = 300; //Attack cooldown
        }
        
        if(distance_to_object(obj_player_move) &gt; 680) state = e_state.idle; // If out of range return to idle
    }
    break;
}

//Collision Checking
if(!place_free(x,y + 1)){
    vspeed = 0;
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Runs if enemy is on the floor
vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
