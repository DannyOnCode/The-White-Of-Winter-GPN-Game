<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_boss</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canAttack = true;
counter = 0;
healthbar = 5;

blackholeSpawn[0] = 192;
blackholeSpawn[1] = 384;

monsterSpawn[0] = 192;
monsterSpawn[1] = 384;

blackholeExist = false;
driftSelfDestroy = 500;
riseSelfDestroy = 600;
blackholeSelfDestroy = 1000;
attackCooldown = 100;

//Retrieve all lanterns in boss fight
lantern[0] = collision_circle(480,192 , 30, obj_lantern, false, false);
lantern[1] = collision_circle(320, 288, 30, obj_lantern, false, false);
lantern[2] = collision_circle(384, 384, 30, obj_lantern, false, false);
lantern[3] = collision_circle(384, 512, 30, obj_lantern, false, false);
lantern[4] = collision_circle(480, 416, 30, obj_lantern, false, false);
lantern[5] = collision_circle(544, 320, 30, obj_lantern, false, false);

currentlySpike = false;
spikesToMake = 10;
spikesLeftToMake = 0;
startSpike[0] = 736
startSpike[1] = 704

//Create Path
path = path_add();
path_set_closed(path,false);
path_add_point(path,startSpike[0],startSpike[1],0);
dirxOfSpike = sign(obj_player_move.x - startSpike[0]);
xEndOfSpike = (startSpike[0] + dirxOfSpike*500)
path_add_point(path,xEndOfSpike,startSpike[1],0);
for(var i = spikesToMake; i &gt;= 0; i -= 1){
    pathArray[i,0] = path_get_x(path,0.96-((spikesToMake-i)*(0.9/spikesToMake)));
    pathArray[i,1] = path_get_y(path,0.96);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pathx = pathArray[spikesToMake-spikesLeftToMake,0];
pathy = pathArray[spikesToMake-spikesLeftToMake,1];
var spike = instance_create(pathx,pathy,obj_spikes);
spikesLeftToMake -= 1;
currentlySpike = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canAttack = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lantern[0].disable = false;
lantern[1].disable = false;
lantern[2].disable = false;
lantern[3].disable = false;
lantern[4].disable = false;
lantern[5].disable = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (healthbar == 0) {
    instance_destroy()
}

if (counter == 4)
{
    counter = 0;
}

if (spikesLeftToMake != 0 &amp;&amp; currentlySpike == false)
{
    currentlySpike= true;
    alarm[2] = 5;
}

//Attack
if (canAttack)
{
    if (counter == 0) 
    {
        option = choose("Disable1","Disable2","DisableNone");
        if (option == "Disable1")
        {
            lantern[0].disable = true;
            lantern[2].disable = true;
            lantern[4].disable = true;
        }
        else if (option == "Disable2")
        {
            lantern[1].disable = true;
            lantern[3].disable = true;
            lantern[5].disable = true;
        }
        alarm[0] = 200;
        counter += 1;
    }
    else if (counter &lt;= 3)
    {
        if (blackholeExist) 
        {
            option = choose("Spikes","Drifting","Rising")
        }
        else 
        {
            option = choose("Spikes","Blackhole","Drifting","Rising")
        }
        
        if (option == "Spikes")
        {
            spikesLeftToMake = spikesToMake;
        }
        else if (option == "Blackhole")
        {
            blackholeExist = true;
            monster = instance_create(blackholeSpawn[0],blackholeSpawn[1],obj_blackhole_enemy);
            monster.alarm[0] = blackholeSelfDestroy;
        }
        else if (option == "Drifting")
        {
            monster = instance_create(monsterSpawn[0],monsterSpawn[1],obj_drift_enemy);
            monster.alarm[0] = driftSelfDestroy;
        }
        else
        {
            monster = instance_create(monsterSpawn[0],monsterSpawn[1],obj_rise_enemy);
            monster.alarm[2] = riseSelfDestroy;
        }
        canAttack = false;
        counter += 1;
        alarm[1] = attackCooldown;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
